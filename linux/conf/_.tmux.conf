
#set-window-option -g window-status-alert-fg yellow
#set-window-option -g window-status-alert-bg black
#set-option -g visual-bell on
#set-option -g bell-action any

set -s escape-time 0

set -g prefix C-x
bind-key -n C-d send-prefix

setw -g mode-keys vi
#setw -g mode-mouse on
#setw -g automatic-rename
# Number of lines held in window history
set -g history-limit 1000
# Use mouse to select pane
#set -g mouse-select-pane on

# when printing pane ids (bind q)
set -g display-panes-time 4000 # 4 secs

#set -g default-command /bin/bash

# -- Keys
unbind %
unbind |
unbind S
bind | split-window -h
bind S split-window -v 
bind -n C-IC new-window 
bind-key C-z last-window

# for vim (?)
# setw -g xterm-keys on

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key J command-prompt -p "send pane to:"  "join-pane -t '%%'"

unbind +
unbind -
bind + new-window -d -n tmux-zoom 'read foo' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
#bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom
#bind - last-window \; join-pane -s tmux-zoom 

# Sysrq SUB
#bind C-F12 send-keys C-] \; saveb /opt/screen/scbuf.tmp \; loadb /opt/screen/scbuf.send_break_sub \; paste-buffer \; loadb /opt/screen/scbuf.tmp
#bind C-F11 send-keys C-] \; send-keys "send brk" \; send-keys Enter \; send-keys "b"
#bind F11 send-keys C-] "send brk" Enter "b"

unbind A
bind A command-prompt "rename-window %%"

bind -n C-PPage copy-mode 
bind  u copy-mode 
bind  i paste-buffer -s \015 
bind  < loadb /tmp/screen-exchange
bind  > saveb /tmp/screen-exchange

#paste-buffer
bind C-v command-prompt "saveb /opt/screen/scbuf.tmp \; loadb /opt/screen/scbuf.%% \; paste-buffer \; loadb /opt/screen/scbuf.tmp "
bind C-c command-prompt "saveb /opt/screen/scbuf.%%"

# Reload key
bind r source-file ~/.tmux.conf


#unbind Escape

# Set status bar
set -g status-bg black
set -g status-fg yellow #white
set -g status-left '#[fg=green][#S]#[default]'
set -g status-right '#[default] #(whoami)@#H#[default] #[fg=green](#(cut -d " " -f 1 /proc/loadavg)) #[fg=yellow]%H:%M#[default]'
# Highlight active window
set-window-option -g window-status-current-bg red


# THEME
# set -g status-bg black
# set -g status-fg white
# set -g status-interval 60
# set -g status-left-length 30
# set -g status-left '#[fg=green](#S) #(whoami)@#H#[default]'
# set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=blue]%H:%M#[default]'
#


# Bind appropriate commands similar to screen.
# lockscreen ^X x 


# displays * 
unbind *
bind * list-clients

unbind M-PPage
unbind M-NPage
bind-key -n M-PPage previous-window
bind-key -n M-NPage next-window
bind-key -n C-Left previous-window
bind-key -n C-Right next-window
bind-key -n C-b previous-window
bind-key -n C-n next-window

unbind M-Up
unbind M-Down
unbind M-Left
unbind M-Right
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R

#unbind C-Up
#unbind C-Down
#unbind C-Left
#unbind C-Right
#bind C-Up resize-pane -U
#bind C-Down resize-pane -D
#bind C-Left resize-pane -L
#bind C-Right resize-pane -R

# use the vim resize keys.
# # the number at the end is how much the pane will be resized,
# # and 1 is fairly small -- you might want to tweak this.
bind -n M-< resize-pane -L 1
bind -n M-> resize-pane -R 1
bind -n M-- resize-pane -D 1
bind -n M-+ resize-pane -U 1

# quit \ 
#unbind \
#bind \ confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# " windowlist -b
unbind '"'
bind '"' choose-window

#Aggressive Resize
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session, even if both clients are looking 
# at different windows. It seems that in this particular case, Screen has the 
# better default where a window is only constrained in size if a 
# smaller client is actively looking at it. This behaviour can be fixed by 
# setting tmux's aggressive-resize option.
#setw -g aggressive-resize on

